dialog.message.title = Message

input.int    = Please input an integer.
input.double = Please input a double.
input.string = Please input a string.
input.char   = Please input a character.
input.float  = Please input a float.
input.long   = Please input a long integer.
input.byte   = Please input a byte.
input.short  = Please input a short integer.
input.boolean = Please input a boolean value.

message.enter_loop                = Entering the {0} loop.
message.open_scope                = Opening new scope for variables.
message.close_scope               = Closing a scope and erasing the scope variables.
message.continue_loop             = Continuing the {0} loop.
message.exit_loop                 = Exiting the {0} loop.
message.break_loop                = Exiting the {0} loop because of break.
message.break_switch              = Exiting the switch statement because of break.
message.skip_loop                 = Not entering the {0} loop.
message.if_then                   = Choosing then-branch.
message.if_else                   = Choosing else-branch.
message.skip_if                   = Continuing without branching.
message.enter_switch              = Entering a switch statement.
message.exit_switch               = Exiting a switch statement.
message.select_switch             = This case selected.
message.default_switch            = Default case selected.
message.array_creation            = A {0}-dimensional array is created.
message.array_creation.dimensions = The dimensions of the array are: {0}.
message.open_array_initializer    = Array is going to be initialized.
message.close_array_initializer   = Array initialization is finished.
message.try						  = Entering try block.
message.catch					  = Catched exception {0}
message.nonparamconstructor_call  = It is a non-parameter Constructor.
message.constructor_call          = Constructor of the object of the class is called.
message.constructor_explanation   = A constructor is a special method in a class that is invoked when the object gets\
                                    instantiated The purpose of a constructor is to allow the fields of the object to\
                                    be initialized when the object is instantiated.\
                                    a constructor satisfies the following two properties:\
                                    The name of the constructor must match the name of the class.\
                                    A constructor does not declare a return value.\
                                                                                          --<JAVA IN 60 MINUTES A DAY>
message.pointerargument           = This argument is not a primitive type.It is a pointer to the object.
message.pointerarg_explanation    = In Java, you do not specify that an argument is to be passed using call by-value.\
                                    It happens automatically, and is,in fact, your only option. Other programming languages\
                                    use call-by-reference and/or call-by-pointer, in which an argument is not copied into a \
                                    parameter. You cannot do call-by reference or call-by-pointer in Java. No matter what type\
                                    of argument you pass in to a method, the corresponding parameter will get a copy of that data,\
                                    which is exactly how call-by-value works.\
                                                                                                  --<JAVA IN 60 MINUTES A DAY>                                                                                                                                                         
message.argument                  = as a argument is passed to 
message.argument_explanation      = Argument is different with parameter.when an argument is passed into a parameter,\
                                    the argument's data is copied into the parameter. 
message.object                    = object is instantiated.
message.object_explanation        = After declaring a reference,using the new keyword to assign the reference to this object.\
                                    The reference is not an object. The object itself does not have a variable name, and the \
                                    only way you can access and use the object is to use a reference to the object.\
                                                                                                  --<JAVA IN 60 MINUTES A DAY>
message.objectfield               = When an object is instantiated,memory is allocated for the field: 
message.objectfield_explanation   = The new operator allocates memory for the object and then "zeroes" the memory so that \
                                    none of the object's fields will contain garbage. Instead, all fields will have an \
                                    initial value of zero.\
                                                                                            --<JAVA IN 60 MINUTES A DAY> 
message.arrow                     = can be accessed by the reference to the object of the class.
message.arrow_explanation         = That arrow points at fields means the fields can be accessed by the reference to the \
                                    object of the class and the reference can be represented by the this keyword.\                                                                                             
message.button1                   = Less details
message.button2                   = More details

string.empty_array1 = EMPTY
string.empty_array2 = ARRAY
string.array_index  = [00]

string.constant_area = Constant and Static Area
string.method_area = Method Area
string.instance_area = Instance and Array Area
string.evaluation_area = Expression Evaluation Area

title.class = The class {0}
title.object_stage = Object of the class {0}
