JELIOT 3 TODO-LIST

* Use invokeLater method to build up the gui in the beginning of the 
  program.
* Initialization of object when it inherits user made class (super() call)
* Super method call with parameters in object creation with inheritance
* Bad user code crashes Jeliot "}", error not being read by Interpreter
* Documentation
* Reference actors needs to be fixed in instances and in short distances
* Arrow heads or something to indicate that the reference ends to that 
  specific object.
* Execute until feature
* Instance garbage collection
* Array initializers
* Array variables could be references
* Command line parameters
* 2 -dimensional arrays
* Default error message needs to be changed
* Static field access
* Super field access
* Super method calls when constructor is called.
* getValue -method for EvaluationVisitor. It returns string 
  representation of the value. If value is primitive type then the values 
  String presentation otherwise the hashcode.
* Connection wizard for different kind of connections (e.g. DJava, Woven 
  Stories etc.) also for different visualizers like Call Tree.
* Call Tree
* (Scratch visualization)?
* Using Vivaldi-kernel as a tool to visualize object oriented programming 
  on more abstract level.
* Not implemented feature -message (Done, but needs to be added from comments to releases)
* Error message when super class, does not include constructor without 
  parameters or default constructor (Done)
* Object's fields initial values (Partially done, but should be changed)
* Simple enough build (DONE)
