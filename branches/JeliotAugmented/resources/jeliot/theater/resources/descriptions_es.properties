description.method_stage = 

description.constant_box = La instancia Caja de Constantes representa un lugar donde todas las constantes aparecen durante la animacion. En programación, las constantes son tipos de datos (con valores numéricos o de cadena) que permanecen invariables, sin posibilidad de cambiar el valor que tienen durante el curso del programa. Una constante corresponde a una longitud fija de un área reservada en la memoria principal del ordenador, donde el programa almacena valores fijos. Por ejemplo:*** El valor de pi = 3.141592. Por conveniencia, el nombre de las constantes suele escribirse en mayúsculas en la mayoría de lenguajes.

description.variable_actor = 
description.reference_variable_actor = 
description.class_actor = 
description.reference_actor = 

description.ci_actor = Este actor representa la invocacion del (o uno de varios posibles) constructor/es de una clase concreta durante la ejecucion de un\n programa. Esto significa que un objeto esta siendo instanciado, asi, dicha clase se convierte en objeto(clase en ejecucion). En el tiempo de vida de\n este actor se pueden ver los argumentos si los hay, que se le pasan al constructor, y los atributos dentro de la clase instanciada a los que normalmente\n
son asignados, aunque esto no sea algo obligatorio.

description.object_stage_actor = ObjectStage es la representacion grafica del ObjectFrame. Contiene los campos del objeto como VariableActors. Su\nsignificado evidencia la existencia de los objetos instanciados y referenciados tal y como son actualmente en el programa en ejecucion, y como algo\ndiferente de la clase concreta de la que son creados.

description.bubble_actor = BubbleActor es un actor que reprenta una referencia por asignar, esto es una referencia a un actor-objeto que esta por ser\ninstanciado, pero que todavia no aparece en pantalla. Cuando el actor-objeto es creado, el Bubble actor desaparece como consecuencia de la asignacion\n
definitiva de la referencia.

description.message_actor = Este es un tipo de actor cuya finalidad es meramente de apoyo textual a la informacion proporcionada durante la ejecucion.\nLa informacion contenida esta relacionada de cerca con el flujo de ejecucion que sigue el programa, esto es, sentencias if-else, bucles while o for, etc...

description.smi_actor = SMIActor representa graficamente la invocacion de un metodo estatico. El actor muestra el nombre del metodo y los parametros de\n una manera similar a la sintaxis de Java. Solamente reemplaza las referencias a variables con sus valores actuales.

description.omi_actor = OMIActor representa graficamente la invocacion de un metodo perteneciente a un objeto. El actor muestra la referencia al objeto,\n el nombre del metodo y los parametros de la manera en que lo hace la sintaxis Java. Solo sustituye las referencias a variables por sus valores actuales.
